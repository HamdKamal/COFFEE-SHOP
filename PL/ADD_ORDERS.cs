using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.IO;
using DevExpress.XtraEditors;
using System.Data.SqlClient;
using COFFEE_SHOP.PL;
using COFFEE_SHOP.FORMS;



namespace COFFEE_SHOP.FORMS
{
    public partial class ADD_ORDERS : DevExpress.XtraEditors.XtraForm
    {
        string vat_1;
        public  void JustNumber(KeyPressEventArgs r)
        {
            if (!char.IsDigit(r.KeyChar))
            {
                if (!char.IsControl(r.KeyChar))
                {
                    if (!char.IsPunctuation(r.KeyChar))
                    {
                        if (!char.IsWhiteSpace(r.KeyChar))
                        {
                            if (!char.IsSeparator(r.KeyChar))
                                r.Handled = true;
                        }
                    }
                }
            }
        }
        void VISIBLE()
        {
            bt_del.Enabled = false;
            bt_edite.Enabled = false;
            bt_save.Enabled = false;
        }

        BL.TRANS TR = new BL.TRANS();
        BL.ORDERS ord = new BL.ORDERS();
        BL.BILLS B = new BL.BILLS();

        void GET_ID()
        {   
            DataTable DT = new DataTable();
            DT = TR.GET_ID_ORD();
            int id = Convert.ToInt32(DT.Rows[DT.Rows.Count - 1][0]);
            txt_id.Text = id.ToString();
        }

        void CLEAR_TEXT_BOX(Control CN)
        {
            foreach (Control C in CN.Controls)
                if (C is TextBox )

                    ((TextBox)C).Clear();

                else

                    CLEAR_TEXT_BOX(C);
            pic_ord.Image = null;
            txt_price.Text = "0";
            txt_vat.Text = "0";
        }
        void VISIBLE_TOOLS(Boolean I)
        {
      
        }

        public void COM_ID()
        {
            cat_name.DataSource = B.GET_GATE();
            cat_name.DisplayMember = "CAT_NAME";
            cat_name.ValueMember = "CAT_ID";
     
        }
        public ADD_ORDERS()
        {
            InitializeComponent();
            GET_ID();
            COM_ID();

            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource1.Fill();
           
        }

        private void labelControl4_Click(object sender, EventArgs e)
        {


        }

        private void simpleButton3_Click(object sender, EventArgs e)
        {
            Dispose();
            Close();
        }

        private void textEdit1_EditValueChanged(object sender, EventArgs e)
        {

        }

        private void panelControl2_Paint(object sender, PaintEventArgs e)
        {

        }

        private void ADD_ORDERS_Load(object sender, EventArgs e)
        {
            VISIBLE();
        }

        private void bt_save_Click(object sender, EventArgs e)
        {
            try
            {
                byte[] pictuer;
                if (pic_ord.Image == null)
                {
                    pictuer = new byte[0];
                    ord.add_orders(Convert.ToInt16(txt_id.Text),txt_name.Text,Convert.ToInt32(cat_name.SelectedValue),txt_price.Text,Convert.ToInt16(txt_vat.Text),txt_tax.Text,date_ord.DateTime,pictuer ,txt_note.Text,"without_image",txt_eng.Text,vat_1);
                   
                }
                else
                {
                    MemoryStream ms = new MemoryStream();
                    pic_ord.Image.Save(ms,pic_ord.Image.RawFormat);
                    pictuer = ms.ToArray();
                    ord.add_orders(Convert.ToInt16(txt_id.Text), txt_name.Text, Convert.ToInt32(cat_name.SelectedValue), txt_price.Text,Convert.ToInt16(txt_vat.Text), txt_tax.Text, date_ord.DateTime, pictuer, txt_note.Text, "with_image",txt_eng.Text,vat_1);
                 
                                    }

            }
            catch
            {
                return;
            }
            MessageBox.Show("تمت إضافة الطلب", "عملية الإضافة", MessageBoxButtons.OK, MessageBoxIcon.Information);
            CLEAR_TEXT_BOX(this);
            sqlDataSource1.Fill();
        }

        private void pic_ord_DoubleClick(object sender, EventArgs e)
        {
            OpenFileDialog ofd = new OpenFileDialog();
            ofd.Filter = "ملفات الصور |*.JPG;*.PNG;*.GIF;*.BMP";
            if (ofd.ShowDialog() == DialogResult.OK)
            {
                pic_ord.Image = Image.FromFile(ofd.FileName);
            }
        }

        private void bt_edite_Click(object sender, EventArgs e)
        {
            try
            {
                byte[] pictuer;
                if (pic_ord.Image == null)
                {
                    pictuer = new byte[0];
                    ord.EDITE_orders(Convert.ToInt16(txt_id.Text), txt_name.Text, Convert.ToInt32(cat_name.SelectedValue), txt_price.Text, Convert.ToInt16(txt_vat.Text), txt_tax.Text, date_ord.DateTime, pictuer, txt_note.Text, "without_image",txt_eng.Text,vat_1);
                  
                }
                else
                {
                    MemoryStream ms = new MemoryStream();
                    pic_ord.Image.Save(ms, pic_ord.Image.RawFormat);
                    pictuer = ms.ToArray();
                    ord.EDITE_orders(Convert.ToInt16(txt_id.Text), txt_name.Text, Convert.ToInt32(cat_name.SelectedValue), txt_price.Text,Convert.ToInt16(txt_vat.Text), txt_tax.Text, date_ord.DateTime, pictuer, txt_note.Text, "with_image",txt_eng.Text,vat_1);
                
                }

            }
            catch
            {
                return;
            }
            MessageBox.Show("تم تعديل الطلب", "عملية التعديل", MessageBoxButtons.OK, MessageBoxIcon.Information);
            CLEAR_TEXT_BOX(this);
            sqlDataSource1.Fill();
        }

        private void bt_del_Click(object sender, EventArgs e)
        {
            ord.DELETE_orders(Convert.ToInt16(txt_id.Text));
            MessageBox.Show("تم حذف الطلب", "عملية الحذف", MessageBoxButtons.OK, MessageBoxIcon.Information);
            CLEAR_TEXT_BOX(this);
            sqlDataSource1.Fill();
        }

        private void bt_exit_Click(object sender, EventArgs e)
        {
            CLEAR_TEXT_BOX(this);
            GET_ID();
            sqlDataSource1.Fill();
            bt_save.Enabled = true;
            bt_del.Enabled = false;
            bt_edite.Enabled = false;
        }

       

        private void GRID_ORD_DoubleClick(object sender, EventArgs e)
        {
           
                   }

        private void txt_note_EditValueChanged(object sender, EventArgs e)
        {

        }

        private void txt_price_KeyUp(object sender, KeyEventArgs e)
        {
            try
            {
                Decimal AMOUNT = Convert.ToDecimal(txt_price.Text);

                int vat = Convert.ToInt32(txt_vat.Text);

                txt_tax.Text = Convert.ToString(AMOUNT + AMOUNT * vat / 100);

                vat_1 = Convert.ToString(Convert.ToDecimal( txt_tax.Text)  - Convert.ToDecimal( txt_price.Text));
            }
            catch
            {
                return;
            }
        }

        private void txt_vat_KeyUp(object sender, KeyEventArgs e)
        {
            try
            {
                Decimal AMOUNT = Convert.ToDecimal(txt_price.Text);

                int vat = Convert.ToInt32(txt_vat.Text);

                txt_tax.Text = Convert.ToString(AMOUNT + AMOUNT * vat / 100);

                vat_1 = Convert.ToString(Convert.ToDecimal(txt_tax.Text) - Convert.ToDecimal(txt_price.Text));
            }
            catch
            {
                return;
            }
        }

        private void GRID_ORD_Click(object sender, EventArgs e)
        {
           
        }

        private void txt_price_EditValueChanged(object sender, EventArgs e)
        {
           
        }

        private void txt_price_KeyPress(object sender, KeyPressEventArgs e)
        {
            JustNumber(e);
        }

        private void txt_vat_KeyPress(object sender, KeyPressEventArgs e)
        {
            JustNumber(e);
        }

        private void gridControl1_Click(object sender, EventArgs e)
        {
            bt_edite.Enabled = true;
            bt_del.Enabled = true;
            bt_save.Enabled = false;

            try
            {
                txt_id.Text = Convert.ToString(gridView1.GetFocusedRowCellValue("معرف الطلب"));
                txt_name.Text = Convert.ToString(gridView1.GetFocusedRowCellValue("إسم الطلب"));
                txt_eng.Text = Convert.ToString(gridView1.GetFocusedRowCellValue("الإسم انجليزي"));
                txt_price.Text = Convert.ToString(gridView1.GetFocusedRowCellValue("السعر"));
                txt_tax.Text = Convert.ToString(gridView1.GetFocusedRowCellValue("التخفيض"));
                txt_vat.Text = Convert.ToString(gridView1.GetFocusedRowCellValue("القيمة المضافة"));
                cat_name.Text = Convert.ToString(gridView1.GetFocusedRowCellValue("نوع الفئة"));
                date_ord.Text = Convert.ToString(gridView1.GetFocusedRowCellValue("التاريخ"));
                txt_note.Text = Convert.ToString(gridView1.GetFocusedRowCellValue("ملاحظة"));
                byte[] pic = (byte[])gridView1.GetFocusedRowCellValue("صورة الطلب");
                MemoryStream MS = new MemoryStream(pic);
                pic_ord.Image = Image.FromStream(MS);
            }
            catch
            {
                return;
            }
        }
    }
}